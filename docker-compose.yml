# Thanks Gary Clarke: https://www.youtube.com/watch?v=S6j4VGMD3Y8&list=PLQH1-k79HB396mS8xRQ5gih5iqkQw-4aV
services:
  # nginx
  web:
    build:
      dockerfile: ./docker/nginx/Dockerfile
    ports:
      - '80:80'
    volumes:
      - ./public:/var/www/html/public
    depends_on:
      - app
  #php
  app:
    build:
      dockerfile: ./docker/php/Dockerfile
    volumes:
      - .:/var/www/html
    command: sh -c 'composer install --prefer-dist --no-scripts --no-progress --no-interaction && php-fpm' # Installing packages and keeping php-fpm running
    environment:
      DB_HOST: db
      DB_PORT: ${DB_PORT:-3306}
      DB_DATABASE: ${DB_DATABASE:-db_anoes}
      DB_USER: ${DB_USER:-user}
      DB_PASSWORD: ${DB_PASSWORD:-root}
    depends_on:
      - node
      - db
  #mysql
  db:
    image: mysql:8.0
    volumes:
      - mysqldata:/var/lib/mysql
    ports:
      - "${DB_PORT:-3306}:3306"
    restart: "unless-stopped"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-root}
      MYSQL_DATABASE: ${DB_DATABASE:-db_anoes}
      MYSQL_USER: ${DB_USER:-user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-root}
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
  #node
  node:
    image: node:22-alpine
    working_dir: /app
    volumes:
      - .:/app
    restart: unless-stopped
    command: sh -c 'npm run dev'
    stdin_open: true # This allows the npm dev command to actually work
    tty: true # This keeps the container up even if npm run dev crashes

volumes:
  mysqldata: